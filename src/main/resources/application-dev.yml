spring:
  application:
    name: sharding-jdbc-demo
  shardingsphere:
    datasource:
      names: m1
      m1:
        type: com.zaxxer.hikari.HikariDataSource
        dirver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/sharding_test?autoReconnect=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
        username: root
        password: root
        max-active: 16
    sharding:
      tables:
        # 表的规则，表明都是course1、course2，以course开头
        course:
          # 行表达式标识符，如果是三个表，就是 tableName$->{1..3}
          actual-data-nodes: m1.course$->{1..2}
          # 指定course表里面主键生成的策略：snowflake 雪花算法
          key-generator:
            column: cid
            type: SNOWFLAKE
          # 指定分片策略 约定cid值是奇数，添加course1，cid值是偶数，添加course2
          table-strategy:
            inline:
              sharding-column: cid, userid
              algorithm-expression: course$->{cid % 2 + 1}
      props:
        sql:
          show: true
  main:
    allow-bean-definition-overriding: true
management:
  endpoints:
    web:
      exposure:
        include: '*'

mybatis-plus:
  type-aliases-package: com.xtt.shardingjdbcdemo.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    jdbc-type-for-null: null
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启sql日志
  global-config:
    banner: false